<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>robonovotny</title>
    <link>http://novotnyr.github.io/</link>
    <description>Recent content on robonovotny</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 22 Jul 2019 00:00:00 +0100</lastBuildDate>
    
	<atom:link href="http://novotnyr.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Maƒæujeme na plote, funkcie si v `gnuplot`-e</title>
      <link>http://novotnyr.github.io/scrolls/malujeme-na-plote-funkcie-si-v-gnuplot-e/</link>
      <pubDate>Mon, 22 Jul 2019 00:00:00 +0100</pubDate>
      
      <guid>http://novotnyr.github.io/scrolls/malujeme-na-plote-funkcie-si-v-gnuplot-e/</guid>
      <description>ƒåo je gnuplot? Ako uv√°dza FAQ (ƒçasto kladen√© ot√°zky), gnuplot je multiplatformov√Ω n√°stroj, ktor√Ω umo≈æ≈àuje:
 kreslenie dvoj- a viacrozmern√Ωch funkci√≠ a bodov v r√¥znych ≈°t√Ωloch v√Ωpoƒçty nad cel√Ωmi, re√°lnymi a komplexn√Ωmi ƒç√≠slami podporu veƒæk√©ho mno≈æstva operaƒçn√Ωch syst√©mov (Linux, Win32, Atari(!)&amp;hellip;) mo≈ænos≈• defin√≠ci√≠ vlastn√Ωch funkci√≠ a kon≈°t√°nt  gnuplot je prim√°rne n√°strojom urƒçen√Ωm pre pr√≠kazov√Ω riadok, ale existuj√∫ aj grafick√© u≈æ√≠vateƒæsk√© rozhrania (napr. pre X11, Win32, MacOS)
Stiahnutie pre platformy Windows Bin√°rky pre gnuplot s√∫ k dispoz√≠cii v podobe in≈°tal√°tora z ofici√°lneho port√°lu na SourceForge.</description>
    </item>
    
    <item>
      <title>N√°vrhov√© vzory: Visitor</title>
      <link>http://novotnyr.github.io/scrolls/navrhove-vzory-vizitor/</link>
      <pubDate>Sun, 21 Jul 2019 12:00:00 +0100</pubDate>
      
      <guid>http://novotnyr.github.io/scrolls/navrhove-vzory-vizitor/</guid>
      <description>O n√°vrhovom vzore  Predstavuje oper√°ciu, ktor√° sa m√° vykona≈• na prvkoch objektovej ≈°trult√∫ry. N√°v≈°tevn√≠k umo≈æ≈àuje definova≈• nov√∫ oper√°ciu bez nutnosti zmeni≈• triedy prvkov, na ktor√Ωch bude operova≈•
‚Äî Gang of Four: Design Patterns (1994)
 √öƒçelom n√°vrhov√©ho vzoru visitor (n√°v≈°tevn√≠k) je oddelenie d√°tovej ≈°trukt√∫ry od oper√°cie, ktor√∫ chceme vykon√°va≈• na jej prvkoch.
 Ak chceme prejs≈• prvky zoznamu a na ka≈ædom z nich nieƒço spravi≈•. Ak chceme prejs≈• uzlami stromu s prehƒæad√°van√≠m do ≈°√≠rky a na ka≈ædom z nich nieƒço spravi≈•.</description>
    </item>
    
    <item>
      <title>Dijkstrov algoritmus a kr√°sna syntax Kotlinu</title>
      <link>http://novotnyr.github.io/scrolls/dijkstrov-algoritmus-a-krasna-syntax-kotlinu/</link>
      <pubDate>Fri, 19 Jul 2019 18:56:29 +0100</pubDate>
      
      <guid>http://novotnyr.github.io/scrolls/dijkstrov-algoritmus-a-krasna-syntax-kotlinu/</guid>
      <description>Dijkstrov algoritmus na hƒæadanie najkrat≈°ej cesty v neorientovanom grafe s nez√°porn√Ωmi hranami je skvel√° mo≈ænos≈•, ako si uk√°za≈• uƒçebnicov√Ω grafov√Ω algoritmus‚Ä¶ ale aj kr√°snu syntax Kotlinu.
Budeme potrebova≈•:
 Reprezent√°ciu grafu: 1ks Funkciu na v√Ωpoƒçet najv√§ƒç≈°ej vzdialenosti A korenie  Reprezent√°cia uzlov Prevody medzi uzlami a ƒç√≠slami.   Reprezent√°cia grafu Graf s uzlami a hranami m√° mili√≥n reprezent√°ci√≠. My si zvol√≠me t√∫ najhl√∫pej≈°iu: maticu incidenci√≠. Ak m√°me dva uzly, U a V, do tabuƒæky na U-ty riadok a V-ty stƒ∫pec uvedieme vzdialenos≈• medzi nimi.</description>
    </item>
    
    <item>
      <title>Elder Scrolls: editor `ed`</title>
      <link>http://novotnyr.github.io/scrolls/ed1-je-standardny-editor-komedia-v-troch-dejstvach/</link>
      <pubDate>Wed, 17 Jul 2019 09:09:39 +0100</pubDate>
      
      <guid>http://novotnyr.github.io/scrolls/ed1-je-standardny-editor-komedia-v-troch-dejstvach/</guid>
      <description>Ako p√≠≈°e @Bodil:
pic.twitter.com/Ut1KV7mx39
&amp;mdash; üåØ Bodil üåØ (@bodil) May 24, 2018 
Dajme si teda ed.
Introitus Najprv uk√°≈ækov√Ω fajl:
printf &amp;#34;%s\n&amp;#34; Lorem ipsum dolor sit amet &amp;gt; lorem.txt Pome na to!
ed lorem.txt  Uvid√≠me tretie najlep≈°ie UI ever:
/tmp‚ü© ed lorem.txt 27  ed je REPL. Akur√°t neni ƒças na blbosti ako prompt. Jedin√©, ƒço vidno, je 27, ƒço nie je zmysel ≈æivota, ale poƒçet znakov v s√∫bore.</description>
    </item>
    
    <item>
      <title>Postavme kotlinovsk√Ω projekt cez Gradle v Kotline</title>
      <link>http://novotnyr.github.io/scrolls/postavme-kotlinovsky-projekt-v-gradle-cez-kotlin/</link>
      <pubDate>Tue, 16 Jul 2019 09:09:39 +0100</pubDate>
      
      <guid>http://novotnyr.github.io/scrolls/postavme-kotlinovsky-projekt-v-gradle-cez-kotlin/</guid>
      <description>Budovanie kotlinovsk√Ωch projektov ƒåo ak chceme vybudova≈• projekt, ktor√©ho zdroj√°ky s√∫ v Kotline a gradloidn√Ω build script je&amp;hellip; v Kotline? (Vlo≈æte yo-dawg-meme.png). Poƒème na to!
V prvom rade potrebujeme deklarova≈• plugin, ktor√Ω zapne podporu pre zostavovanie zdrojov√Ωch k√≥dov nap√≠san√Ωch v Kotline. Do nov√©ho build scriptu uvedieme tri sekcie.
plugins { kotlin(&amp;#34;jvm&amp;#34;) version &amp;#34;1.3.41&amp;#34; } repositories { mavenCentral() } dependencies { implementation(kotlin(&amp;#34;stdlib&amp;#34;)) }  plugins: sekcia plugins sl√∫≈æi na zav√°dzanie pluginov.</description>
    </item>
    
    <item>
      <title>Str√°vte letn√∫ sez√≥nu zostavovan√≠m projektov pomocou Kotlinu cez Gradle</title>
      <link>http://novotnyr.github.io/scrolls/stravte-letnu-sezonu-zostavovanim-projektov-pomocou-kotlinu-cez-gradle/</link>
      <pubDate>Mon, 15 Jul 2019 09:09:39 +0100</pubDate>
      
      <guid>http://novotnyr.github.io/scrolls/stravte-letnu-sezonu-zostavovanim-projektov-pomocou-kotlinu-cez-gradle/</guid>
      <description>Preƒço Gradle a preƒço Kotlin? Gradle je rokmi overen√Ω n√°stroj na zostavovanie projektov v Java ekosyst√©me. Samotn√© pr√≠kazy pre zostavenie boli od nepam√§t√≠ p√≠san√© v jazyku Gradle. Nov√Ωm hitom je v≈°ak Kotlin! Uk√°≈æme si, ako m√¥≈æeme vyu≈æi≈• tento jazyk na zostavovanie projektov.
Prv√Ω gradlovsk√Ω skript v Kotline Predpokladajme, ≈æe m√°me k dispoz√≠cii posledn√Ω Gradle, napr√≠klad 5.5.1. V nejakom adres√°ri si zalo≈æme kotlinovsk√Ω build script:
touch build.gradle.kts Vytvorme prv√Ω task, teda pr√≠kaz, ktor√Ω sa bude da≈• pomocou Gradle vykona≈•.</description>
    </item>
    
    <item>
      <title>Korutiny v Kotline</title>
      <link>http://novotnyr.github.io/scrolls/korutiny-v-kotline/</link>
      <pubDate>Mon, 08 Jul 2019 09:09:39 +0100</pubDate>
      
      <guid>http://novotnyr.github.io/scrolls/korutiny-v-kotline/</guid>
      <description>Korutiny v Kotline V be≈ænej Jave sa sp√∫≈°≈•anie √∫loh na pozad√≠ (teda paraleln√Ω beh √∫loh) d√° dosiahnu≈• pomocou vl√°kien (threads). Tento mechanizmus v≈°ak m√¥≈æe by≈• natoƒæko komplikovan√Ω, ≈æe zaberie pol semestra vysvetƒæovania.
Kotlin pon√∫ka alternat√≠vu: korutiny / coroutines, ktor√© maj√∫ viacero v√Ωhod:
 elegantn√Ω z√°pis vƒèaka kombin√°cii syntaxe Kotlinu a kni≈ænice pre korutiny s√∫ ≈°k√°lovateƒæn√©: poƒæahky si m√¥≈æeme pusti≈• st√°tis√≠ce korut√≠n vyu≈æ√≠vaj√∫ neblokuj√∫cu filozofiu: keƒè≈æe sa takmer nikde na niƒç neƒçak√°, z√≠skame nesmierny v√Ωkon podporuj√∫ skladanie korut√≠n cez ≈°trukt√∫rovan√∫ konkurentnos≈• (structured concurrency).</description>
    </item>
    
    <item>
      <title>Mrie≈æky v Androide cez GridLayout</title>
      <link>http://novotnyr.github.io/scrolls/mriezky-v-androide-cez-gridlayout/</link>
      <pubDate>Wed, 20 Feb 2019 09:09:39 +0100</pubDate>
      
      <guid>http://novotnyr.github.io/scrolls/mriezky-v-androide-cez-gridlayout/</guid>
      <description>Vlastn√© pi≈°kvorky v Androide si vy≈æaduj√∫ mrie≈æku 3 x 3, ktor√° zaber√° cel√∫ obrazovku. Ako na to v Androide?
M√°me viacero mo≈ænosti:
 GridView: star√Ω dobr√Ω widget, ktor√Ω zobraz√≠ d√°ta z adapt√©ra v mrie≈æke. Probl√©my? Ner√°ta s t√Ωm, ≈æe widgety sa trafia ‚Äúpresne‚Äù do veƒækosti obrazovky. Buƒè ich je m√°lo a dole ostane vzduch, alebo priveƒæa a potom budeme scrollova≈•. Ale my nechceme scrollovateƒæn√© pi≈°kvorky. GridLayout: layout od ƒçias API 14 (4.</description>
    </item>
    
    <item>
      <title>Nahr√°dzanie premenn√Ωch v stringu v Springu</title>
      <link>http://novotnyr.github.io/scrolls/nahradzanie-premennych-v-retazci-v-springu/</link>
      <pubDate>Sun, 10 Feb 2019 14:06:56 +0100</pubDate>
      
      <guid>http://novotnyr.github.io/scrolls/nahradzanie-premennych-v-retazci-v-springu/</guid>
      <description>Spring m√° geni√°lne vymyslen√Ω syst√©m properties, kde mo≈æno uklada≈• rozliƒçn√© konfiguraƒçn√© nastavenia v prostred√≠ (Environment) a robi≈• s t√Ωm kdejak√© finty. ƒåo keƒè v≈°ak potrebujeme √∫plne hl√∫pu vec: nahradi≈• premenn√© v re≈•azci konkr√©tnymi namapovan√Ωmi hodnotami?
Zoberme si re≈•azec:
http://${hostname}/${path}  Zoberme si dve premenn√© ‚Äî host s hodnotou localhost a path s hodnotou qofola.
Po nahraden√≠ by sme chceli z√≠ska≈• kr√°snu URL:
http://localhost/qofola  Spring! Trieda PropertyPlaceholderHelper s√≠ce nem√° √∫plne ide√°lny n√°zov, ale m√° dve z√°kladn√© met√≥dy:</description>
    </item>
    
    <item>
      <title>≈†es≈•desiat vizitiek s ≈•ah√°kmi k shellu</title>
      <link>http://novotnyr.github.io/scrolls/vizitkar-shellu/</link>
      <pubDate>Sun, 03 Feb 2019 18:56:29 +0100</pubDate>
      
      <guid>http://novotnyr.github.io/scrolls/vizitkar-shellu/</guid>
      <description>TLDR; ≈•ah√°ky k shellu v tvare vizitiek 9x5cm s√∫ zverejnen√© na GitHube.
Poƒças zimn√©ho semestra 2018&amp;frasl;2019 be≈æal na PF UPJ≈† kurz Semin√°r k operaƒçn√Ωm syst√©mom, kde som vyuƒçoval Powershell a Bash. Na zaƒçiatku ka≈æd√©ho shellov√©ho stretnutia som rozdal jeden A4kov√Ω handout, kde boli uverejnen√© syntaktick√© a pr√≠kazov√© n√°povedy, ktor√© sa mohli hodi≈• k danej t√©me.
Obsah z cviƒçen√≠ som n√°sledne preklopil z Wordu do LaTeXu a nasekal do form√°tu vizitiek 9x5cm.</description>
    </item>
    
    <item>
      <title>Mocking AMQP Integration tests with Apache Qpid</title>
      <link>http://novotnyr.github.io/scrolls/qpid-as-mocking-amqp-broker-for-integration-tests/</link>
      <pubDate>Wed, 23 Jan 2019 19:01:38 +0100</pubDate>
      
      <guid>http://novotnyr.github.io/scrolls/qpid-as-mocking-amqp-broker-for-integration-tests/</guid>
      <description>AMQP protocol is a useful mechanism to tackle cross-component integration features. When running integration tests, sometimes it‚Äôs useful to run integration tests without a full-fledged broker at hand. Especially, when RabbitMQ is an Erlang-based binary expected to run besides a Java-powered application.
Let‚Äôs use an alternative solution. Apache Qpid is a messaging solution and broker that is implemented in Java. In addition, it supports the following features:
 Supports the AMQP 0.</description>
    </item>
    
    <item>
      <title>Saving Keystrokes with Live Templates in IntelliJ IDEA</title>
      <link>http://novotnyr.github.io/scrolls/saving-keystrokes-with-live-templates-in-intellij-idea/</link>
      <pubDate>Mon, 21 Jan 2019 12:31:44 +0100</pubDate>
      
      <guid>http://novotnyr.github.io/scrolls/saving-keystrokes-with-live-templates-in-intellij-idea/</guid>
      <description>Typing Code Over and Over? In one of the projects, we had to create many customized enumerations. Something like this:
public class Status { ONLINE(&amp;quot;on&amp;quot;), OFFLINE(&amp;quot;off&amp;quot;); }  Each of this enum was supposed to have a findByCode method that would resolve ‚Äúon‚Äù to ONLINE and ‚Äúoff‚Äù to offline. Something like this:
public enum Status { ONLINE(&amp;quot;on&amp;quot;), OFFLINE(&amp;quot;off&amp;quot;); private final String code; Status(String code) { this.code = code; } public static Status findByCode(String code) throws IllegalArgumentException { for (Status value : Status.</description>
    </item>
    
    <item>
      <title>Mal√° ƒçokol√°dov√° REST aplik√°cia (List Milanovi)</title>
      <link>http://novotnyr.github.io/scrolls/mala-cokoladova-rest-aplikacia-list-milanovi/</link>
      <pubDate>Sun, 20 Jan 2019 14:06:56 +0100</pubDate>
      
      <guid>http://novotnyr.github.io/scrolls/mala-cokoladova-rest-aplikacia-list-milanovi/</guid>
      <description>Mil√Ω Milan, chcel si vedie≈•, ako vyzer√° minimalistick√° RESTovsk√° aplik√°cia postaven√° na aplikaƒçnom r√°mci Spring Boot.
Tu je.
Predov≈°etk√Ωm, z√≠de sa ti Maven. Nielen≈æe sa vysporiada so z√°vislos≈•ami v Springu, ale d√° ti k dispoz√≠cii fajnov√Ω plugin pre Jetty, v ktorom bude sp√∫≈°≈•anie servera vecou na 10 znakov.
Z√°vislosti Zaƒçni teda POMkom, ktor√Ω oddeƒè od rodiƒçovsk√©ho POM s√∫boru a z√°rove≈à dodaj z√°vislos≈• pre podporu webu a modulu Spring Web MVC.</description>
    </item>
    
    <item>
      <title>Enforcing Spring Cloud Contracts Over AMQP</title>
      <link>http://novotnyr.github.io/scrolls/enforcing-spring-cloud-contracts-over-amqp/</link>
      <pubDate>Fri, 18 Jan 2019 09:09:39 +0100</pubDate>
      
      <guid>http://novotnyr.github.io/scrolls/enforcing-spring-cloud-contracts-over-amqp/</guid>
      <description>Why Spring Cloud and CDC? The Spring Cloud Contract enforces Consumer Driven Contracts (CDC) in the services. While there are various examples of the HTTP integration, let‚Äôs focus on another scenario ‚Äî enforcing contracts on messages in the AMQP protocol.
We will create a simple example where a producer will send a user presence message to a consumer. This message will be in the JSON format, send via pre-aggreed exchange.</description>
    </item>
    
    <item>
      <title>Veselice s `xargs`</title>
      <link>http://novotnyr.github.io/scrolls/veselice-s-xargs/</link>
      <pubDate>Sun, 13 Jan 2019 10:20:04 +0100</pubDate>
      
      <guid>http://novotnyr.github.io/scrolls/veselice-s-xargs/</guid>
      <description>Ka≈æd√Ω druh√Ω ƒçl√°nok o xargs sa zaƒç√≠na v duchu ‚Äû&amp;hellip; jedn√Ωm z najpodce≈àovanej≈°√≠ch pr√≠kazov Unixu je&amp;hellip;‚Äù. Tento nebude in√Ω.
Mnohokr√°t sa st√°va, ≈æe v√Ωstupom programu je niekoƒæko slov oddelen√Ωch bielym miestom (napr. slov√° na samostatn√Ωch riadkoch), ktor√© chceme postupne jeden za druh√Ωm spracov√°va≈• a posiela≈• ako parameter do in√©ho programu. Nieƒço v duchu:
pre ka≈æd√© slovo R spracuj R  Priamo for cyklus! V shellscriptingu je v≈°ak for prek√©rny: vy≈æaduje toti≈æ podivn√∫ viacriadkov√∫ syntax&amp;hellip; a komu sa chce kv√¥li jednoduch√Ωm jednorazov√Ωm veciam zaklada≈• skripty, p√≠sa≈• shebangy, chmodova≈• a patla≈• sa s editorom.</description>
    </item>
    
    <item>
      <title>Running MongoDB ReplicaSet on localhost</title>
      <link>http://novotnyr.github.io/scrolls/running-mongodb-replicaset-on-localhost/</link>
      <pubDate>Fri, 11 Jan 2019 08:58:04 +0000</pubDate>
      
      <guid>http://novotnyr.github.io/scrolls/running-mongodb-replicaset-on-localhost/</guid>
      <description>Setup Cluster Create Instances Create directories:
mkdir -p /tmp/mongodb/rs-{0,1,2}  In shell, run:
mongod --dbpath /tmp/mongodb/rs-0 --replSet rs --port 27021 --bind_ip localhost --smallfiles --oplogSize 128 mongod --dbpath /tmp/mongodb/rs-1 --replSet rs --port 27022 --bind_ip localhost --smallfiles --oplogSize 128 mongod --dbpath /tmp/mongodb/rs-2 --replSet rs --port 27023 --bind_ip localhost --smallfiles --oplogSize 128 Initiate ReplicaSet Run client to initiate ReplicaSet:
mongo --port 27021 Create ReplicaSet configuration:
rs.initiate({ _id : &amp;#39;rs&amp;#39;, members: [ { _id : 0, host : &amp;#34;localhost:27021&amp;#34; }, { _id : 1, host : &amp;#34;localhost:27022&amp;#34; }, { _id : 2, host : &amp;#34;localhost:27023&amp;#34; } ] })  Review with:</description>
    </item>
    
    <item>
      <title>Tri skvel√© tipy pre pr√°cu s konzolou: bat, fzf, up</title>
      <link>http://novotnyr.github.io/scrolls/tri-skvele-tipy-pre-pracu-s-konzolou-bat-fzf-up/</link>
      <pubDate>Wed, 09 Jan 2019 10:20:04 +0100</pubDate>
      
      <guid>http://novotnyr.github.io/scrolls/tri-skvele-tipy-pre-pracu-s-konzolou-bat-fzf-up/</guid>
      <description>Na zimu sa treba zahria≈• pri termin√°li! ≈†tyri utility v tom pom√¥≈æu:
 bat ‚Äî ako cat, ale s kr√≠dlami. up ‚Äî interakt√≠vny budovateƒæ a vyhodnocovateƒæ r√∫r, p√°jp, ƒçi kol√≥n fzf ‚Äî interakt√≠vny fuzzy vyhƒæad√°vaƒç v≈°etk√©ho ‚Äî s√∫borov, procesov a mnoh√©ho!  N√°stroje s√∫ dostupn√© pre ak√Ωkoƒævek linuxoidn√Ω operaƒçn√Ω syst√©m a pre ka≈æd√Ω shell.
cat s farbami cat je ako Lada ‚Äî dokonal√Ω u≈æ od zaƒçiatku: jednoducho vypƒæuje d√°ta z r√∫ry / s√∫boru bez zmeny.</description>
    </item>
    
    <item>
      <title>Tri veci pri pr√°ci s adres√°rmi v termin√°li, ktor√© rob√≠te zle</title>
      <link>http://novotnyr.github.io/scrolls/tri-veci-pri-praci-s-adresarmi-ktore-robite-zle-exa-fd-ag/</link>
      <pubDate>Tue, 08 Jan 2019 07:44:08 +0100</pubDate>
      
      <guid>http://novotnyr.github.io/scrolls/tri-veci-pri-praci-s-adresarmi-ktore-robite-zle-exa-fd-ag/</guid>
      <description>Trojica ls, find a grep sa v linuxovom termin√°li pou≈æ√≠va ka≈æd√Ω de≈à. Nie v≈ædy s√∫ v≈°ak pohodln√©, veƒè poniektor√© n√°stroje maj√∫ azda aj 50 rokov. Uk√°≈æme si modern√© alternat√≠vy pre nov√© mil√©nium!
 exa namiesto ls fd namiesto find ag namiesto find / grep  V≈°etky n√°stroje funguj√∫ kr√≠≈æom cez linuxov√© distrib√∫cie i na MacOS.
exa - v√Ωpis adres√°ra pre modern√Ωch ƒæud√≠ brew install exa  Pr√≠kaz exa je ako ls, iba≈æe je</description>
    </item>
    
    <item>
      <title>Spracovanie argumentov v shelli cez `getopts`</title>
      <link>http://novotnyr.github.io/scrolls/spracovanie-argumentov-cez-getopts/</link>
      <pubDate>Mon, 07 Jan 2019 07:44:08 +0100</pubDate>
      
      <guid>http://novotnyr.github.io/scrolls/spracovanie-argumentov-cez-getopts/</guid>
      <description>Naƒço je dobr√Ω getops? getopts je posixov√Ω n√°stroj na spracov√°vanie prep√≠naƒçov z pr√≠kazov√©ho riadka v r√°mci shellov√©ho skriptu. Vezmime si pr√≠klad:
./ffind.sh -s -t d java xml Pr√≠kaz ffind.sh dostal p√§≈• argumentov, ktor√© v skutoƒçnosti reprezentuj√∫ tri rozliƒçn√© druhy ‚Äúvstupov‚Äù:
 -s teda prep√≠naƒç -t reprezentuj√∫ci prep√≠naƒç s parametrom (d) dva nepomenovan√© argumenty java a xml  Ak by sme mali tak√©to argumenty spracov√°va≈• ruƒçne, bolo by to ≈°ialen√©. Pr√≠kaz getopts sa s t√Ωm vysporiada veƒæmi jednoducho.</description>
    </item>
    
    <item>
      <title>Urobme nieƒço s `make`</title>
      <link>http://novotnyr.github.io/scrolls/urobme-nieco-s-make/</link>
      <pubDate>Fri, 04 Jan 2019 14:57:45 +0100</pubDate>
      
      <guid>http://novotnyr.github.io/scrolls/urobme-nieco-s-make/</guid>
      <description>O make a makefile s√∫boroch make zjednodu≈°√≠ zostavovanie s√∫borov - teda kompilovanie, konverzie, ƒçi ak√©koƒævek in√© hromadn√© spracovanie s√∫borov. Zostavi≈• bin√°rku zo zdroj√°ku v C√©ƒçku? Vytvori≈• PDF s√∫bor v diplomovej pr√°ce v LaTeXu? Previes≈• markdownovsk√© zdrojov√© s√∫bory do HTML? To v≈°etko make zvl√°dne bez probl√©mov.
A keƒè≈æe u≈æ od nepam√§ti je s√∫ƒças≈•ou ka≈æd√©ho Linuxu, ƒçi dokonca MacOS, oplat√≠ sa ho spozna≈•!
Jednoduch√© recepty, najm√§ pre c√©ƒçkarov Recept: overenie, ≈æe make funguje make je naozaj v≈°ade!</description>
    </item>
    
    <item>
      <title>Thinlet ‚Äì r√Ωchly v√Ωvoj jednoduch√Ωch GUI v Jave</title>
      <link>http://novotnyr.github.io/scrolls/thinlet-rychly-vyvoj-jednoduchych-gui-v-jave/</link>
      <pubDate>Sun, 14 Feb 2010 00:00:00 +0100</pubDate>
      
      <guid>http://novotnyr.github.io/scrolls/thinlet-rychly-vyvoj-jednoduchych-gui-v-jave/</guid>
      <description>√övod ‚ÄûOkienkov√©‚Äú aplik√°cie s√≠ce netvoria dominantu javovsk√Ωch projektov. Klasickou voƒæbou je pou≈æitie kni≈ænice Swing (zabudovanej v Jave) ƒçi SWT (od IBM). Obe kni≈ænice s√∫ dostatoƒçne stabiln√© a te≈°ia sa ≈°irokej podpore a pou≈æ√≠vaniu.
Jednou z ich typick√Ωch charakterist√≠k je defin√≠cia pou≈æ√≠vateƒæsk√©ho rozhrania priamo v k√≥de. Niekedy v roku 2005 v≈°ak vznikla vlna projektov, ktor√° pristupovala k implement√°cii grafick√Ωch rozhran√≠ odli≈°n√Ωm sp√¥sobom. Samotn√© pou≈æ√≠vateƒæsk√© rozhranie je definovan√© v XML s√∫boroch, a Java k√≥d len definuje samotn√∫ funkcionalitu a pr√≠slu≈°n√∫ obslu≈æn√∫ logiku.</description>
    </item>
    
    <item>
      <title>Ako napl√°nova≈• cestu autom cez Dijkstrov algoritmus</title>
      <link>http://novotnyr.github.io/scrolls/ako-naplanovat-cestu-autom-dijkstra-algoritmus/</link>
      <pubDate>Sun, 01 Jun 2008 09:30:00 +0100</pubDate>
      
      <guid>http://novotnyr.github.io/scrolls/ako-naplanovat-cestu-autom-dijkstra-algoritmus/</guid>
      <description>Cestujeme na v√Ωchod Predstavte si, ≈æe v√°s ktosi prin√∫til odcestova≈• na obchodn√© rokovanie z Bratislavy do Ko≈°√≠c a ste n√∫ten√≠ na to pou≈æi≈• auto. Aby ste zn√≠≈æili n√°klady, budete chcie≈• asi n√°js≈• optim√°lnu cestu ‚Äî pre jednoduchos≈• predpokladajme, ≈æe je to najkrat≈°ia cesta. Na to pou≈æijete asi klasick√Ω autoatlas Slovenskej republiky, v ktorom si cestu vypoƒç√≠tate sami. Ako druh√∫ mo≈ænos≈• m√¥≈æete pou≈æi≈• niektor√Ω z existuj√∫cich internetov√Ωch pl√°novaƒçov ciest, ktor√© v√°m cestu vypoƒç√≠taj√∫ sam√©.</description>
    </item>
    
    <item>
      <title>Ako zavies≈• internet s pou≈æit√≠m kostier? Kruskalov algoritmus pre minim√°lnu kostru grafu.</title>
      <link>http://novotnyr.github.io/scrolls/ako-zaviest-internet-s-pouzitim-kostier-minimalna-kostra-kruskalov-algoritmus/</link>
      <pubDate>Mon, 19 May 2008 00:00:00 +0100</pubDate>
      
      <guid>http://novotnyr.github.io/scrolls/ako-zaviest-internet-s-pouzitim-kostier-minimalna-kostra-kruskalov-algoritmus/</guid>
      <description>Zav√°dzame internet Predstavte si, ≈æe ste ≈°√©fom spoloƒçnosti, ktor√° z√≠skala bal√≠k pe≈àaz√≠ na prepojenie slovensk√Ωch krajsk√Ωch miest internetom s pou≈æit√≠m optickej linky. Jednou z najd√¥le≈æitej≈°√≠ch vec√≠, ktor√° v√°s bude zauj√≠ma≈•, je celkov√° dƒ∫≈æka k√°blov, ktor√© budete musie≈• zavies≈• medzi mestami. Asi veƒæmi r√Ωchlo si v≈°imnete, ≈æe k√°blom netreba prepoji≈• ka≈æd√© s ka≈æd√Ωm mestom. (Nemus√≠te teda prep√°ja≈• Ko≈°ice s Bratislavou priamo, staƒç√≠ zavies≈• k√°bel do Banskej Bystrice a z nej do Bratislavy).</description>
    </item>
    
    <item>
      <title>Ako usporiada≈• predmety v ≈°tudijnom programe? Algoritmus pre topologick√© triedenie</title>
      <link>http://novotnyr.github.io/scrolls/ako-usporiadat-predmety-v-studijnom-programe-topologicke-triedenie/</link>
      <pubDate>Sun, 11 May 2008 00:00:00 +0100</pubDate>
      
      <guid>http://novotnyr.github.io/scrolls/ako-usporiadat-predmety-v-studijnom-programe-topologicke-triedenie/</guid>
      <description>√övod Modern√Ω ≈°tudent sa mus√≠ bori≈• s mnoh√Ωmi probl√©mami. Kreditn√Ω syst√©m pou≈æ√≠van√Ω na univerzit√°ch je dostatoƒçne flexibiln√Ω, ale kladie na √∫boh√©ho ≈°tudenta mnoh√© bremen√° ‚Äî napr. potrebu si vybra≈• predmety tak, aby spƒ∫≈àali nielen jeho t√∫≈æby a oƒçak√°vania, ale aj form√°lne krit√©ri√° syst√©mu.
Predstavme si ≈°tudijn√Ω program, ƒço je mno≈æina predmetov, v ktorej m√° ka≈æd√Ω predmet mno≈æinu ‚Äûprerekviz√≠t‚Äú. Prerekvizita predmetu predstavuje sadu predmetov, ktor√© mus√≠ ≈°tudent absolvova≈• predt√Ωm, ne≈æ si zap√≠≈°e dan√Ω predmet.</description>
    </item>
    
    <item>
      <title>Prehƒæad√°vanie do hƒ∫bky v jazyku Java</title>
      <link>http://novotnyr.github.io/scrolls/prehladavanie-do-hlbky-v-jazyku-java/</link>
      <pubDate>Wed, 07 May 2008 00:00:00 +0100</pubDate>
      
      <guid>http://novotnyr.github.io/scrolls/prehladavanie-do-hlbky-v-jazyku-java/</guid>
      <description>√övod V predo≈°lom ƒçl√°nku sme spom√≠nali algoritmus prehƒæad√°vania do ≈°√≠rky, ktor√Ω prech√°dzal strom ,,po vrstv√°ch&amp;rdquo;. Okrem neho jestvuje e≈°te analogick√Ω algoritmus prehƒæad√°vania do hƒ∫bky. Jeho z√°kladnou ideou je presk√∫mavanie ciest ved√∫cich k ƒço najhlb≈°iemu potomkovi dan√©ho uzla.
Pekn√Ωm pr√≠kladom prehƒæad√°vania do hƒ∫bky je traverzovanie s√∫borov√©ho syst√©mu. Ak chceme prejs≈• v≈°etky s√∫bory v danom adres√°ri a jeho podadres√°roch (a v podadres√°roch jeho podadres√°rov), tak√©to prehƒæad√°vanie sa n√°m veƒæmi hod√≠.
Zjednodu≈°en√Ω s√∫borov√Ω syst√©m m√¥≈æe vyzera≈• nasledovne:</description>
    </item>
    
    <item>
      <title>Prehƒæad√°vanie do ≈°√≠rky v jazyku Java</title>
      <link>http://novotnyr.github.io/scrolls/prehladavanie-do-sirky-v-jazyku-java/</link>
      <pubDate>Tue, 06 May 2008 00:00:00 +0100</pubDate>
      
      <guid>http://novotnyr.github.io/scrolls/prehladavanie-do-sirky-v-jazyku-java/</guid>
      <description>√övod Algoritmy na prehƒæad√°vanie stromov si mno≈æstvo ƒæud√≠ pam√§t√° (alebo nepam√§t√°) z vysokej ≈°koly. Napriek tomu niekedy m√¥≈æe nasta≈• situ√°cia, keƒè je vhodn√© ich pou≈æi≈• a pri tej pr√≠le≈æitosti si ich pripomen√∫≈•.
Predstavme si jednoduch√∫ √∫lohu: m√°me stromov√∫ ≈°trukt√∫ru (napr. rodostrom predkov), ktor√∫ chceme vyp√≠sa≈• na konzolu. Pr√≠kladom tak√©hoto stromu je nasledovn√Ω obr√°zok:
V√Ωpis na konzolu by znamenal, ≈æe chceme vyp√≠sa≈• nieƒço tak√©to:
kore≈à A B C 1 2 3 4 5  Ako na to?</description>
    </item>
    
  </channel>
</rss>